{"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":775,"status":"ok","timestamp":1714629083656,"user":{"displayName":"DHARNESH.K","userId":"07439229979503856864"},"user_tz":-330},"id":"ITbh3PPLnQWH","outputId":"e0c7a05c-56e1-4a37-b5e4-0fdaaf9c735d"},"outputs":[{"output_type":"stream","name":"stdout","text":["Failed to load (likely expired) https://storage.googleapis.com/kaggle-competitions-data/kaggle-v2/8076/44219/bundle/archive.zip?X-Goog-Algorithm=GOOG4-RSA-SHA256&X-Goog-Credential=gcp-kaggle-com%40kaggle-161607.iam.gserviceaccount.com%2F20240325%2Fauto%2Fstorage%2Fgoog4_request&X-Goog-Date=20240325T031731Z&X-Goog-Expires=259200&X-Goog-SignedHeaders=host&X-Goog-Signature=23bea85ff701a90c19926974af5a0128b00dcdcb8637e397d91aa80902d9385b4330aaabd207716ffe14b6310bfd39b82c89bc28c38881999efc8c8b71892ed0c45c45936f8a7f9936c0e93d9d91eca5ea63dabc2f5ec7503794a30f5644c8afa52b435174068b3f761561ff10801fed5a04061e8591ef29dca428ecca2c28396a8012f178063aea329c988e908bcd404d59820fdc20913a8590917408c5a1e389d4f7c10dbb79208d800a26822593eafe188e8410b1809a6efd25f3dbaa0d45cc2d3bff8e68406183ed1430766b4f2d8cebaf1f012f33463822291e2293057039a1d1956bb74e2dfc888c2810901bcabf8b2ac504905cfe5563dd7219f05f7f to path /kaggle/input/jigsaw-toxic-comment-classification-challenge\n","Data source import complete.\n"]}],"source":["\n","# IMPORTANT: RUN THIS CELL IN ORDER TO IMPORT YOUR KAGGLE DATA SOURCES\n","# TO THE CORRECT LOCATION (/kaggle/input) IN YOUR NOTEBOOK,\n","# THEN FEEL FREE TO DELETE THIS CELL.\n","# NOTE: THIS NOTEBOOK ENVIRONMENT DIFFERS FROM KAGGLE'S PYTHON\n","# ENVIRONMENT SO THERE MAY BE MISSING LIBRARIES USED BY YOUR\n","# NOTEBOOK.\n","\n","import os\n","import sys\n","from tempfile import NamedTemporaryFile\n","from urllib.request import urlopen\n","from urllib.parse import unquote, urlparse\n","from urllib.error import HTTPError\n","from zipfile import ZipFile\n","import tarfile\n","import shutil\n","\n","CHUNK_SIZE = 40960\n","DATA_SOURCE_MAPPING = 'jigsaw-toxic-comment-classification-challenge:https%3A%2F%2Fstorage.googleapis.com%2Fkaggle-competitions-data%2Fkaggle-v2%2F8076%2F44219%2Fbundle%2Farchive.zip%3FX-Goog-Algorithm%3DGOOG4-RSA-SHA256%26X-Goog-Credential%3Dgcp-kaggle-com%2540kaggle-161607.iam.gserviceaccount.com%252F20240325%252Fauto%252Fstorage%252Fgoog4_request%26X-Goog-Date%3D20240325T031731Z%26X-Goog-Expires%3D259200%26X-Goog-SignedHeaders%3Dhost%26X-Goog-Signature%3D23bea85ff701a90c19926974af5a0128b00dcdcb8637e397d91aa80902d9385b4330aaabd207716ffe14b6310bfd39b82c89bc28c38881999efc8c8b71892ed0c45c45936f8a7f9936c0e93d9d91eca5ea63dabc2f5ec7503794a30f5644c8afa52b435174068b3f761561ff10801fed5a04061e8591ef29dca428ecca2c28396a8012f178063aea329c988e908bcd404d59820fdc20913a8590917408c5a1e389d4f7c10dbb79208d800a26822593eafe188e8410b1809a6efd25f3dbaa0d45cc2d3bff8e68406183ed1430766b4f2d8cebaf1f012f33463822291e2293057039a1d1956bb74e2dfc888c2810901bcabf8b2ac504905cfe5563dd7219f05f7f'\n","\n","KAGGLE_INPUT_PATH='/kaggle/input'\n","KAGGLE_WORKING_PATH='/kaggle/working'\n","KAGGLE_SYMLINK='kaggle'\n","\n","!umount /kaggle/input/ 2> /dev/null\n","shutil.rmtree('/kaggle/input', ignore_errors=True)\n","os.makedirs(KAGGLE_INPUT_PATH, 0o777, exist_ok=True)\n","os.makedirs(KAGGLE_WORKING_PATH, 0o777, exist_ok=True)\n","\n","try:\n","  os.symlink(KAGGLE_INPUT_PATH, os.path.join(\"..\", 'input'), target_is_directory=True)\n","except FileExistsError:\n","  pass\n","try:\n","  os.symlink(KAGGLE_WORKING_PATH, os.path.join(\"..\", 'working'), target_is_directory=True)\n","except FileExistsError:\n","  pass\n","\n","for data_source_mapping in DATA_SOURCE_MAPPING.split(','):\n","    directory, download_url_encoded = data_source_mapping.split(':')\n","    download_url = unquote(download_url_encoded)\n","    filename = urlparse(download_url).path\n","    destination_path = os.path.join(KAGGLE_INPUT_PATH, directory)\n","    try:\n","        with urlopen(download_url) as fileres, NamedTemporaryFile() as tfile:\n","            total_length = fileres.headers['content-length']\n","            print(f'Downloading {directory}, {total_length} bytes compressed')\n","            dl = 0\n","            data = fileres.read(CHUNK_SIZE)\n","            while len(data) > 0:\n","                dl += len(data)\n","                tfile.write(data)\n","                done = int(50 * dl / int(total_length))\n","                sys.stdout.write(f\"\\r[{'=' * done}{' ' * (50-done)}] {dl} bytes downloaded\")\n","                sys.stdout.flush()\n","                data = fileres.read(CHUNK_SIZE)\n","            if filename.endswith('.zip'):\n","              with ZipFile(tfile) as zfile:\n","                zfile.extractall(destination_path)\n","            else:\n","              with tarfile.open(tfile.name) as tarfile:\n","                tarfile.extractall(destination_path)\n","            print(f'\\nDownloaded and uncompressed: {directory}')\n","    except HTTPError as e:\n","        print(f'Failed to load (likely expired) {download_url} to path {destination_path}')\n","        continue\n","    except OSError as e:\n","        print(f'Failed to load {download_url} to path {destination_path}')\n","        continue\n","\n","print('Data source import complete.')\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"_hSYOqglnQWJ"},"outputs":[],"source":["# This Python 3 environment comes with many helpful analytics libraries installed\n","# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n","# For example, here's several helpful packages to load\n","\n","import numpy as np # linear algebra\n","import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n","\n","# Input data files are available in the read-only \"../input/\" directory\n","# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n","\n","import os\n","for dirname, _, filenames in os.walk('/kaggle/input'):\n","     for filename in filenames:\n","        print(os.path.join(dirname, filename))\n","\n","# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\"\n","# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":8064,"status":"ok","timestamp":1714628901794,"user":{"displayName":"DHARNESH.K","userId":"07439229979503856864"},"user_tz":-330},"id":"TdJqc24ynQWK","outputId":"3520eaab-fdc6-4d2d-e302-b2b5a00518b7"},"outputs":[{"output_type":"stream","name":"stderr","text":["[nltk_data] Downloading package stopwords to /root/nltk_data...\n","[nltk_data]   Unzipping corpora/stopwords.zip.\n"]}],"source":["import matplotlib.pyplot as plt\n","import tensorflow as tf\n","from keras.preprocessing.text import Tokenizer\n","from keras.utils import pad_sequences\n","from sklearn.model_selection import train_test_split\n","from keras.utils import to_categorical\n","from keras.models import Sequential, Model\n","from keras.layers import Dense,Dropout,Input,Embedding,Flatten,TextVectorization,Conv1D,GlobalMaxPooling1D,MaxPooling1D,GlobalAveragePooling1D\n","from keras.initializers import Constant\n","from keras.layers import Dense,LSTM,Bidirectional,Attention,Concatenate,GRU,BatchNormalization\n","import nltk\n","from nltk.corpus import stopwords\n","import re\n","nltk.download('stopwords')\n","import pickle\n","import pandas as pd\n","import jieba"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"H-E-j1-XnQWL","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1714628903657,"user_tz":-330,"elapsed":14,"user":{"displayName":"DHARNESH.K","userId":"07439229979503856864"}},"outputId":"426d9a87-a02c-4d39-b3b2-085cdcbc383f"},"outputs":[{"output_type":"stream","name":"stdout","text":["mkdir: cannot create directory ‘/kaggle/working/data’: No such file or directory\n"]}],"source":["!mkdir /kaggle/working/data"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":919,"status":"ok","timestamp":1714628904569,"user":{"displayName":"DHARNESH.K","userId":"07439229979503856864"},"user_tz":-330},"id":"I9JJsDz4nQWL","outputId":"cded2fa7-fb90-4e42-d363-0a647a2cbfa6"},"outputs":[{"output_type":"stream","name":"stdout","text":["unzip:  cannot find or open /kaggle/input/jigsaw-toxic-comment-classification-challenge/train.csv.zip, /kaggle/input/jigsaw-toxic-comment-classification-challenge/train.csv.zip.zip or /kaggle/input/jigsaw-toxic-comment-classification-challenge/train.csv.zip.ZIP.\n","unzip:  cannot find or open /kaggle/input/jigsaw-toxic-comment-classification-challenge/sample_submission.csv.zip, /kaggle/input/jigsaw-toxic-comment-classification-challenge/sample_submission.csv.zip.zip or /kaggle/input/jigsaw-toxic-comment-classification-challenge/sample_submission.csv.zip.ZIP.\n","unzip:  cannot find or open /kaggle/input/jigsaw-toxic-comment-classification-challenge/test_labels.csv.zip, /kaggle/input/jigsaw-toxic-comment-classification-challenge/test_labels.csv.zip.zip or /kaggle/input/jigsaw-toxic-comment-classification-challenge/test_labels.csv.zip.ZIP.\n","unzip:  cannot find or open /kaggle/input/jigsaw-toxic-comment-classification-challenge/test.csv.zip, /kaggle/input/jigsaw-toxic-comment-classification-challenge/test.csv.zip.zip or /kaggle/input/jigsaw-toxic-comment-classification-challenge/test.csv.zip.ZIP.\n"]}],"source":["!unzip /kaggle/input/jigsaw-toxic-comment-classification-challenge/train.csv.zip -d /kaggle/working/data\n","!unzip /kaggle/input/jigsaw-toxic-comment-classification-challenge/sample_submission.csv.zip -d /kaggle/working/data\n","!unzip /kaggle/input/jigsaw-toxic-comment-classification-challenge/test_labels.csv.zip -d /kaggle/working/data\n","!unzip /kaggle/input/jigsaw-toxic-comment-classification-challenge/test.csv.zip -d /kaggle/working/data"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":47914,"status":"ok","timestamp":1714628952478,"user":{"displayName":"DHARNESH.K","userId":"07439229979503856864"},"user_tz":-330},"id":"JLWEeCdzTpfO","outputId":"d5f7870b-5794-4469-f98a-75d56490668b"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}],"source":["# prompt: drive mount\n","\n","from google.colab import drive\n","drive.mount('/content/drive')\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"elapsed":6276,"status":"ok","timestamp":1714628966347,"user":{"displayName":"DHARNESH.K","userId":"07439229979503856864"},"user_tz":-330},"id":"VdV1d-pjnQWL","outputId":"01879b9b-53a6-4064-d7c3-cefcfa36af20"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["                 id                                       comment_text  toxic  \\\n","0  0000997932d777bf  Explanation\\nWhy the edits made under my usern...      0   \n","1  000103f0d9cfb60f  D'aww! He matches this background colour I'm s...      0   \n","2  000113f07ec002fd  Hey man, I'm really not trying to edit war. It...      0   \n","3  0001b41b1c6bb37e  \"\\nMore\\nI can't make any real suggestions on ...      0   \n","4  0001d958c54c6e35  You, sir, are my hero. Any chance you remember...      0   \n","\n","   severe_toxic  obscene  threat  insult  identity_hate  \n","0             0        0       0       0              0  \n","1             0        0       0       0              0  \n","2             0        0       0       0              0  \n","3             0        0       0       0              0  \n","4             0        0       0       0              0  "],"text/html":["\n","  <div id=\"df-9be2d4f6-2e78-4512-8057-ba1392b1a853\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>comment_text</th>\n","      <th>toxic</th>\n","      <th>severe_toxic</th>\n","      <th>obscene</th>\n","      <th>threat</th>\n","      <th>insult</th>\n","      <th>identity_hate</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0000997932d777bf</td>\n","      <td>Explanation\\nWhy the edits made under my usern...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>000103f0d9cfb60f</td>\n","      <td>D'aww! He matches this background colour I'm s...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>000113f07ec002fd</td>\n","      <td>Hey man, I'm really not trying to edit war. It...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0001b41b1c6bb37e</td>\n","      <td>\"\\nMore\\nI can't make any real suggestions on ...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0001d958c54c6e35</td>\n","      <td>You, sir, are my hero. Any chance you remember...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9be2d4f6-2e78-4512-8057-ba1392b1a853')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9be2d4f6-2e78-4512-8057-ba1392b1a853 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9be2d4f6-2e78-4512-8057-ba1392b1a853');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e764fb75-fdad-4912-bb44-ac73eabdadaa\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e764fb75-fdad-4912-bb44-ac73eabdadaa')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e764fb75-fdad-4912-bb44-ac73eabdadaa button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data_train"}},"metadata":{},"execution_count":6}],"source":["data_train = pd.read_csv('/content/drive/MyDrive/train.csv')\n","data_train.head()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":11,"status":"ok","timestamp":1714628966348,"user":{"displayName":"DHARNESH.K","userId":"07439229979503856864"},"user_tz":-330},"id":"QdKAlgZ8nQWM","outputId":"b8ea795f-338f-4ebd-bdb8-188a8345c643"},"outputs":[{"output_type":"stream","name":"stdout","text":["toxic\n","0    144277\n","1     15294\n","Name: count, dtype: int64\n","--------------------------------------------------\n","severe_toxic\n","0    157976\n","1      1595\n","Name: count, dtype: int64\n","--------------------------------------------------\n","obscene\n","0    151122\n","1      8449\n","Name: count, dtype: int64\n","--------------------------------------------------\n","threat\n","0    159093\n","1       478\n","Name: count, dtype: int64\n","--------------------------------------------------\n","insult\n","0    151694\n","1      7877\n","Name: count, dtype: int64\n","--------------------------------------------------\n","identity_hate\n","0    158166\n","1      1405\n","Name: count, dtype: int64\n","--------------------------------------------------\n"]}],"source":["for column in data_train.columns:\n","    if column != 'comment_text' and column != 'id' :\n","        print(data_train[column].value_counts())\n","        print('-' * 50)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3,"status":"ok","timestamp":1714628968790,"user":{"displayName":"DHARNESH.K","userId":"07439229979503856864"},"user_tz":-330},"id":"u9DJp1YPnQWM","outputId":"469100f1-4de9-4cfe-b0e6-383175c6f3d7"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0, 0, 0, 0, 0, 0],\n","       [0, 0, 0, 0, 0, 0],\n","       [0, 0, 0, 0, 0, 0],\n","       ...,\n","       [0, 0, 0, 0, 0, 0],\n","       [0, 0, 0, 0, 0, 0],\n","       [0, 0, 0, 0, 0, 0]])"]},"metadata":{},"execution_count":8}],"source":["list_classes = [\"toxic\", \"severe_toxic\", \"obscene\", \"threat\", \"insult\", \"identity_hate\"]\n","y_train = data_train[list_classes].values\n","y_train"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"elapsed":6141,"status":"ok","timestamp":1714628976758,"user":{"displayName":"DHARNESH.K","userId":"07439229979503856864"},"user_tz":-330},"id":"f9wiNkzCnQWN","outputId":"6afc75d4-2619-4c2b-b442-42d6eed15858"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["                 id                                       comment_text\n","0  00001cee341fdb12  Yo bitch Ja Rule is more succesful then you'll...\n","1  0000247867823ef7  == From RfC == \\n\\n The title is fine as it is...\n","2  00013b17ad220c46  \" \\n\\n == Sources == \\n\\n * Zawe Ashton on Lap...\n","3  00017563c3f7919a  :If you have a look back at the source, the in...\n","4  00017695ad8997eb          I don't anonymously edit articles at all."],"text/html":["\n","  <div id=\"df-b8ce03c6-82b0-413b-899b-3687b4530b6a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>comment_text</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>00001cee341fdb12</td>\n","      <td>Yo bitch Ja Rule is more succesful then you'll...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0000247867823ef7</td>\n","      <td>== From RfC == \\n\\n The title is fine as it is...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>00013b17ad220c46</td>\n","      <td>\" \\n\\n == Sources == \\n\\n * Zawe Ashton on Lap...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>00017563c3f7919a</td>\n","      <td>:If you have a look back at the source, the in...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>00017695ad8997eb</td>\n","      <td>I don't anonymously edit articles at all.</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b8ce03c6-82b0-413b-899b-3687b4530b6a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b8ce03c6-82b0-413b-899b-3687b4530b6a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b8ce03c6-82b0-413b-899b-3687b4530b6a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-731be8e1-5ab4-4354-b269-3812c0cf4fcc\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-731be8e1-5ab4-4354-b269-3812c0cf4fcc')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-731be8e1-5ab4-4354-b269-3812c0cf4fcc button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data_test"}},"metadata":{},"execution_count":9}],"source":["data_test = pd.read_csv('/content/drive/MyDrive/test.csv')\n","data_test.head()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"TM7vBWChnQWN"},"outputs":[],"source":["# lowercase and remove extraspace\n","data_train[\"comment_text\"] = data_train[\"comment_text\"].str.lower()\n","data_train[\"comment_text\"] = data_train[\"comment_text\"].str.replace(\"\\xa0\", \" \", regex=False).str.split().str.join(\" \")\n","data_test[\"comment_text\"] = data_test[\"comment_text\"].str.lower()\n","data_test[\"comment_text\"] = data_test[\"comment_text\"].str.replace(\"\\xa0\", \" \", regex=False).str.split().str.join(\" \")"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":36},"executionInfo":{"elapsed":11,"status":"ok","timestamp":1714628982287,"user":{"displayName":"DHARNESH.K","userId":"07439229979503856864"},"user_tz":-330},"id":"pq0X6Vz9nQWN","outputId":"22212c96-e635-43df-c7e5-9ffb6eab0cc2"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["\"d'aww! he matches this background colour i'm seemingly stuck with. thanks. (talk) 21:51, january 11, 2016 (utc)\""],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":11}],"source":["data_train['comment_text'][1]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"VC629EUDnQWN"},"outputs":[],"source":["x_train=data_train['comment_text']\n","x_test=data_test['comment_text']"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"executionInfo":{"elapsed":1382,"status":"ok","timestamp":1714628983663,"user":{"displayName":"DHARNESH.K","userId":"07439229979503856864"},"user_tz":-330},"id":"40ITfZadnQWO","outputId":"c6fe2553-6dc8-4d56-e3a8-2cf345dc058d"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["                      id  toxic  severe_toxic  obscene  threat  insult  \\\n","0       00001cee341fdb12     -1            -1       -1      -1      -1   \n","1       0000247867823ef7     -1            -1       -1      -1      -1   \n","2       00013b17ad220c46     -1            -1       -1      -1      -1   \n","3       00017563c3f7919a     -1            -1       -1      -1      -1   \n","4       00017695ad8997eb     -1            -1       -1      -1      -1   \n","...                  ...    ...           ...      ...     ...     ...   \n","153159  fffcd0960ee309b5     -1            -1       -1      -1      -1   \n","153160  fffd7a9a6eb32c16     -1            -1       -1      -1      -1   \n","153161  fffda9e8d6fafa9e     -1            -1       -1      -1      -1   \n","153162  fffe8f1340a79fc2     -1            -1       -1      -1      -1   \n","153163  ffffce3fb183ee80     -1            -1       -1      -1      -1   \n","\n","        identity_hate  \n","0                  -1  \n","1                  -1  \n","2                  -1  \n","3                  -1  \n","4                  -1  \n","...               ...  \n","153159             -1  \n","153160             -1  \n","153161             -1  \n","153162             -1  \n","153163             -1  \n","\n","[153164 rows x 7 columns]"],"text/html":["\n","  <div id=\"df-639ff52c-b8c5-4eef-9699-01b3d400e5f9\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>toxic</th>\n","      <th>severe_toxic</th>\n","      <th>obscene</th>\n","      <th>threat</th>\n","      <th>insult</th>\n","      <th>identity_hate</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>00001cee341fdb12</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0000247867823ef7</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>00013b17ad220c46</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>00017563c3f7919a</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>00017695ad8997eb</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>153159</th>\n","      <td>fffcd0960ee309b5</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","    </tr>\n","    <tr>\n","      <th>153160</th>\n","      <td>fffd7a9a6eb32c16</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","    </tr>\n","    <tr>\n","      <th>153161</th>\n","      <td>fffda9e8d6fafa9e</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","    </tr>\n","    <tr>\n","      <th>153162</th>\n","      <td>fffe8f1340a79fc2</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","    </tr>\n","    <tr>\n","      <th>153163</th>\n","      <td>ffffce3fb183ee80</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>153164 rows × 7 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-639ff52c-b8c5-4eef-9699-01b3d400e5f9')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-639ff52c-b8c5-4eef-9699-01b3d400e5f9 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-639ff52c-b8c5-4eef-9699-01b3d400e5f9');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-cbbfe0be-b18e-4a7b-a7fc-3addc5d4faa8\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cbbfe0be-b18e-4a7b-a7fc-3addc5d4faa8')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-cbbfe0be-b18e-4a7b-a7fc-3addc5d4faa8 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_341e6144-c0f7-4751-aa3b-d6f36c8c8fff\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('label_test')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_341e6144-c0f7-4751-aa3b-d6f36c8c8fff button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('label_test');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"label_test"}},"metadata":{},"execution_count":13}],"source":["label_test=pd.read_csv('/content/drive/MyDrive/test_labels.csv')\n","label_test"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":10,"status":"ok","timestamp":1714628983663,"user":{"displayName":"DHARNESH.K","userId":"07439229979503856864"},"user_tz":-330},"id":"xf09r692nQWO","outputId":"545d11da-9348-4e7b-dd5f-f099cdd2b0d3"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[-1, -1, -1, -1, -1, -1],\n","       [-1, -1, -1, -1, -1, -1],\n","       [-1, -1, -1, -1, -1, -1],\n","       ...,\n","       [-1, -1, -1, -1, -1, -1],\n","       [-1, -1, -1, -1, -1, -1],\n","       [-1, -1, -1, -1, -1, -1]])"]},"metadata":{},"execution_count":14}],"source":["y_test = label_test[list_classes].values\n","y_test"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":9,"status":"ok","timestamp":1714628983664,"user":{"displayName":"DHARNESH.K","userId":"07439229979503856864"},"user_tz":-330},"id":"no0bHyG1nQWO","outputId":"8748ea7c-54bb-4aa8-b7fb-277dba4c9bc4"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0, 0, 0, 0, 0, 0],\n","       [0, 0, 0, 0, 0, 0],\n","       [0, 0, 0, 0, 0, 0],\n","       ...,\n","       [0, 0, 0, 0, 0, 0],\n","       [0, 0, 0, 0, 0, 0],\n","       [0, 0, 0, 0, 0, 0]])"]},"metadata":{},"execution_count":15}],"source":["y_train"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"B6jb6mLVnQWO"},"outputs":[],"source":["# Remove common English stop words\n","def clean(text):\n","  stop_words = set(stopwords.words('english'))\n","  tokens = [word for word in text.split() if word not in stop_words]\n","  text = ' '.join(tokens)\n","  return text"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"i6QgqQQbnQWO"},"outputs":[],"source":["x_train_cleaned = x_train.apply(clean)\n","x_test_cleaned = x_test.apply(clean)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"KnjdS2OHnQWO"},"outputs":[],"source":["# Tokenize the text data\n","tokenizer = Tokenizer()\n","tokenizer.fit_on_texts(x_train_cleaned)\n","X_train_sequences = tokenizer.texts_to_sequences(x_train_cleaned)\n","X_test_sequences = tokenizer.texts_to_sequences(x_test_cleaned)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":23,"status":"ok","timestamp":1714629061718,"user":{"displayName":"DHARNESH.K","userId":"07439229979503856864"},"user_tz":-330},"id":"YnN0GFE_nQWO","outputId":"56a7aa33-4a61-4cc4-df03-c424c6f7250f"},"outputs":[{"output_type":"stream","name":"stdout","text":["209627\n"]}],"source":["word_index = tokenizer.word_index\n","total_words = len(word_index)\n","print(total_words) #same as length of vocabulary"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Sj6dQwOPnQWO"},"outputs":[],"source":["emb_len=len(tokenizer.index_word)+1"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":5,"status":"ok","timestamp":1714629061718,"user":{"displayName":"DHARNESH.K","userId":"07439229979503856864"},"user_tz":-330},"id":"xW9VlGSSnQWO","outputId":"4b710797-4299-4904-b2ff-422c11ac1f16"},"outputs":[{"output_type":"stream","name":"stdout","text":["1349\n"]}],"source":["#getting the length of the maximum sequence in the dataset\n","max_length = max([len(w) for w in X_train_sequences])\n","print(max_length)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"5kfnDco8nQWO","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1714632754543,"user_tz":-330,"elapsed":1429,"user":{"displayName":"DHARNESH.K","userId":"07439229979503856864"}},"outputId":"d1cca2ad-6f26-4f44-d6e3-7d68f64c7eeb"},"outputs":[{"output_type":"stream","name":"stdout","text":["[[ 2604   567  8826 ...     0     0     0]\n"," [ 1106   257   589 ...     0     0     0]\n"," [   33 34500 62747 ...     0     0     0]\n"," ...\n"," [ 1127     9   324 ...     0     0     0]\n"," [    7  6089  2004 ...     0     0     0]\n"," [   88   139   832 ...     0     0     0]]\n"]}],"source":["# Padding the sequences\n","X_train_padded = pad_sequences(X_train_sequences, maxlen=100, padding='post', truncating='post')\n","X_test_padded = pad_sequences(X_test_sequences, maxlen=100, padding='post', truncating='post')\n","print(X_test_padded)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"tw9NsxdznQWP"},"outputs":[],"source":["# Input layer\n","input_layer = Input(shape=(100,))  # Specify max_len as the maximum sequence length\n","\n","# Embedding layer\n","embedding_layer = Embedding(emb_len, 128)(input_layer)\n","\n","# Bidirectional LSTM layer replaced with Attention layer\n","lstm_layer = Bidirectional(LSTM(128, return_sequences=True, dropout=0.2, recurrent_dropout=0.3))(embedding_layer)\n","attention = Attention()([lstm_layer, lstm_layer])  # Attention layer\n","\n","# 1D Convolutional layer\n","conv1d_layer = Conv1D(64, kernel_size=3, activation='relu')(attention)\n","\n","# GlobalMaxPooling1D layer\n","global_max_pooling_layer = GlobalMaxPooling1D()(conv1d_layer)\n","\n","# Dense layers\n","dense_layer_1 = Dense(128, activation='relu')(global_max_pooling_layer)\n","output_layer = Dense(6, activation='sigmoid')(dense_layer_1)\n","\n","# Model creation\n","model = Model(inputs=input_layer, outputs=output_layer)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":18,"status":"ok","timestamp":1714629063946,"user":{"displayName":"DHARNESH.K","userId":"07439229979503856864"},"user_tz":-330},"id":"7onWBUF8nQWP","outputId":"00307768-407c-4da6-f4fa-617344db65ca"},"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"model\"\n","__________________________________________________________________________________________________\n"," Layer (type)                Output Shape                 Param #   Connected to                  \n","==================================================================================================\n"," input_1 (InputLayer)        [(None, 100)]                0         []                            \n","                                                                                                  \n"," embedding (Embedding)       (None, 100, 128)             2683238   ['input_1[0][0]']             \n","                                                          4                                       \n","                                                                                                  \n"," bidirectional (Bidirection  (None, 100, 256)             263168    ['embedding[0][0]']           \n"," al)                                                                                              \n","                                                                                                  \n"," attention (Attention)       (None, 100, 256)             0         ['bidirectional[0][0]',       \n","                                                                     'bidirectional[0][0]']       \n","                                                                                                  \n"," conv1d (Conv1D)             (None, 98, 64)               49216     ['attention[0][0]']           \n","                                                                                                  \n"," global_max_pooling1d (Glob  (None, 64)                   0         ['conv1d[0][0]']              \n"," alMaxPooling1D)                                                                                  \n","                                                                                                  \n"," dense (Dense)               (None, 128)                  8320      ['global_max_pooling1d[0][0]']\n","                                                                                                  \n"," dense_1 (Dense)             (None, 6)                    774       ['dense[0][0]']               \n","                                                                                                  \n","==================================================================================================\n","Total params: 27153862 (103.58 MB)\n","Trainable params: 27153862 (103.58 MB)\n","Non-trainable params: 0 (0.00 Byte)\n","__________________________________________________________________________________________________\n"]}],"source":["model.summary()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"h7XSptgVnQWP"},"outputs":[],"source":["model.compile(optimizer='adam',loss='binary_crossentropy',metrics=['accuracy'])"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"GnElV_HPnQWP"},"outputs":[],"source":["checkpoint_path = 'training/best_model.ckpt'\n","checkpoint_dir = os.path.dirname(checkpoint_path)\n","model_checkpoint_callback = tf.keras.callbacks.ModelCheckpoint(\n","    filepath=checkpoint_path,\n","    monitor='val_accuracy',\n","    mode='max',\n","    save_best_only=True)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"u5UkRK30nQWP"},"outputs":[],"source":["from keras.callbacks import EarlyStopping\n","early_stop = EarlyStopping(monitor='val_loss',patience=3,verbose=True)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"I9rO9RSHnQWP","executionInfo":{"status":"ok","timestamp":1714632636427,"user_tz":-330,"elapsed":3534086,"user":{"displayName":"DHARNESH.K","userId":"07439229979503856864"}},"outputId":"cdbf1091-d4b6-46f2-964c-ee6cc6c59fc6"},"outputs":[{"output_type":"stream","name":"stdout","text":["1122/1122 [==============================] - 3534s 3s/step - loss: 0.0915 - accuracy: 0.9752 - val_loss: 0.0519 - val_accuracy: 0.9939\n"]}],"source":["#Trainig the model\n","history = model.fit(X_train_padded,y_train,batch_size=128,epochs=1,validation_split=0.1,callbacks=[model_checkpoint_callback,early_stop])"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ySIDDblinQWP","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1714632637292,"user_tz":-330,"elapsed":872,"user":{"displayName":"DHARNESH.K","userId":"07439229979503856864"}},"outputId":"a9ed1aac-1227-4800-99a2-bda125c0d193"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["<tensorflow.python.checkpoint.checkpoint.CheckpointLoadStatus at 0x7981f436fc40>"]},"metadata":{},"execution_count":32}],"source":["#Load best model\n","model.load_weights(checkpoint_path)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"WeJvmdI9nQWP","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1714634097574,"user_tz":-330,"elapsed":580232,"user":{"displayName":"DHARNESH.K","userId":"07439229979503856864"}},"outputId":"eedfb927-8cd7-4d35-8d61-0fd03a12c96b"},"outputs":[{"output_type":"stream","name":"stdout","text":["4787/4787 [==============================] - 580s 121ms/step - loss: -3.3344 - accuracy: 0.9990\n","Validation Loss: -3.3344414234161377, Validation Accuracy: 0.9989814758300781\n"]}],"source":["## Evaluate Model\n","loss, accuracy = model.evaluate(X_test_padded, y_test)\n","print(f'Validation Loss: {loss}, Validation Accuracy: {accuracy}')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"wSqaMRMunQWP","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1714633517346,"user_tz":-330,"elapsed":625693,"user":{"displayName":"DHARNESH.K","userId":"07439229979503856864"}},"outputId":"86556217-7939-4744-b334-512e699d28ef"},"outputs":[{"output_type":"stream","name":"stdout","text":["4787/4787 [==============================] - 592s 124ms/step\n","[[9.9013942e-01 3.0581155e-01 9.5121074e-01 9.2667103e-02 8.2918185e-01\n","  3.0554920e-01]\n"," [2.9691150e-03 5.9530498e-06 2.5446023e-04 4.9850172e-05 3.6059058e-04\n","  5.5734890e-05]\n"," [3.4442542e-03 7.7679379e-06 2.9401883e-04 6.3614447e-05 4.4420757e-04\n","  6.6846122e-05]\n"," ...\n"," [3.0549790e-03 6.4108281e-06 2.8840016e-04 3.2391483e-05 2.5639849e-04\n","  5.8652924e-05]\n"," [8.7571878e-04 7.0491438e-07 6.2526997e-05 6.7538458e-06 7.5769014e-05\n","  1.0728291e-05]\n"," [9.4229984e-01 7.7944234e-02 7.7740270e-01 6.8500727e-02 6.3630426e-01\n","  1.9190837e-01]]\n"]}],"source":["# Predictions\n","predictions = model.predict(X_test_padded)\n","print(predictions)\n","\n","predictions = pd.DataFrame(predictions)\n","output = pd.DataFrame(data={'id': data_test['id'],'toxic': predictions[0], 'severe_toxic': predictions[1],\n","                           'obscene': predictions[2], 'threat': predictions[3], 'insult': predictions[4],\n","                           'identity_hate': predictions[5]})\n","output.to_csv('submission.csv', index=False)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"u0vKNCXonQWP"},"outputs":[],"source":[]}],"metadata":{"colab":{"provenance":[{"file_id":"https://storage.googleapis.com/kaggle-colab-exported-notebooks/attention-based-bilstm-cnn-approach-9e6ae27d-8b8b-4ad1-a997-114da0b910d2.ipynb?X-Goog-Algorithm=GOOG4-RSA-SHA256&X-Goog-Credential=gcp-kaggle-com%40kaggle-161607.iam.gserviceaccount.com/20240325/auto/storage/goog4_request&X-Goog-Date=20240325T031731Z&X-Goog-Expires=259200&X-Goog-SignedHeaders=host&X-Goog-Signature=374f087a8acb471d996d5e6590e2fb313a3e8624ae6bf3b23d2bc832e15fd66676de7ec8c176ee593e1a42823087896153f305809a46da6bc8e31c138bc7ae257e2bfc917de0436cc65a07fa5ba3e0a0c2f83dc5200365bac37b352f901f8f2afc97fd53facbaf88d7d221282c5fdb3bda4b922d02ae9f2603c395d7f26fd743a8f21d258f42f12c5988b04a0fd0f479e307837e9ce733dc3f224f5eedda97d76319b7882741520984611cef7d6a195fa5d7b22f5a62394fc6a11959a83b79f5c0300c5a5d99e52f3cf7257e01afccb044bd937ccfba7c69a6dbd7d3c143f1e7312342168ea3524faa719429fc6b3c800e73e86aa3e1da6e35904c3724fdb2b7","timestamp":1711336670962}]},"kaggle":{"accelerator":"gpu","dataSources":[{"databundleVersionId":44219,"sourceId":8076,"sourceType":"competition"}],"dockerImageVersionId":30636,"isGpuEnabled":true,"isInternetEnabled":true,"language":"python","sourceType":"notebook"},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.10.12"}},"nbformat":4,"nbformat_minor":0}